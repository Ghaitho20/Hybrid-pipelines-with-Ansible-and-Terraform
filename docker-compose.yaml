version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: parisdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - paris-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API - NO PORTS EXPOSED
  backend:
    image: ghaitho20/paris-backend:latest
    # Remove ports - backend won't be exposed directly
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: parisdb
      POSTGRES_SERVICE: db  
      POSTGRES_PORT: 5432
      LIMIT_EXAMPLES: 100
      FLASK_DEBUG: "false"
      FLASK_HOST: "0.0.0.0"
      FLASK_PORT: 5000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - paris-network

  # Frontend - NO PORTS EXPOSED, use relative URLs
  frontend:
    image: ghaitho20/paris-frontend:NEW
    # Remove ports - frontend won't be exposed directly
    environment:
      API_URL: "/api"  # Use relative path
    networks:
      - paris-network

  # Nginx Reverse Proxy - ONLY THIS EXPOSES PORTS
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - paris-network
  
  # Monitoring (keep as is)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - paris-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - paris-network

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVICE}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - paris-network

volumes:
  postgres_data:
  grafana_data:

networks:
  paris-network:
    driver: bridge